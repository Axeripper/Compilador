/* Generated By:JJTree&JavaCC: Do not edit this line. compiladoraulaConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface compiladoraulaConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMENTARIO = 5;
  /** RegularExpression Id. */
  int COMENTARIOS = 6;
  /** RegularExpression Id. */
  int COM = 7;
  /** RegularExpression Id. */
  int INICIOPROGRAMA = 8;
  /** RegularExpression Id. */
  int PONTOVIRGULA = 9;
  /** RegularExpression Id. */
  int ABRABLOCO = 10;
  /** RegularExpression Id. */
  int FIMBLOCO = 11;
  /** RegularExpression Id. */
  int TIPOINTEIRO = 12;
  /** RegularExpression Id. */
  int TIPOBINARIO = 13;
  /** RegularExpression Id. */
  int TIPOFRASE = 14;
  /** RegularExpression Id. */
  int TIPOREAL = 15;
  /** RegularExpression Id. */
  int VAR = 16;
  /** RegularExpression Id. */
  int ESCREVER = 17;
  /** RegularExpression Id. */
  int LER = 18;
  /** RegularExpression Id. */
  int SE = 19;
  /** RegularExpression Id. */
  int SENAO = 20;
  /** RegularExpression Id. */
  int SELECIONA = 21;
  /** RegularExpression Id. */
  int CASO = 22;
  /** RegularExpression Id. */
  int DEFAULTT = 23;
  /** RegularExpression Id. */
  int BREAK = 24;
  /** RegularExpression Id. */
  int PARA = 25;
  /** RegularExpression Id. */
  int IN = 26;
  /** RegularExpression Id. */
  int SEGUINTE = 27;
  /** RegularExpression Id. */
  int FACA = 28;
  /** RegularExpression Id. */
  int ENQUANTO = 29;
  /** RegularExpression Id. */
  int SOMA = 30;
  /** RegularExpression Id. */
  int SUBTRAIR = 31;
  /** RegularExpression Id. */
  int MULTI = 32;
  /** RegularExpression Id. */
  int DIVI = 33;
  /** RegularExpression Id. */
  int MOD = 34;
  /** RegularExpression Id. */
  int BRANCO = 35;
  /** RegularExpression Id. */
  int MAIOR = 36;
  /** RegularExpression Id. */
  int MENOR = 37;
  /** RegularExpression Id. */
  int IGUAL = 38;
  /** RegularExpression Id. */
  int AND = 39;
  /** RegularExpression Id. */
  int OU = 40;
  /** RegularExpression Id. */
  int NAO = 41;
  /** RegularExpression Id. */
  int ABRECHAVES = 42;
  /** RegularExpression Id. */
  int FECHAVES = 43;
  /** RegularExpression Id. */
  int ABRE = 44;
  /** RegularExpression Id. */
  int FECHA = 45;
  /** RegularExpression Id. */
  int PONTOS = 46;
  /** RegularExpression Id. */
  int NUMERO = 47;
  /** RegularExpression Id. */
  int LETRA = 48;
  /** RegularExpression Id. */
  int ID = 49;
  /** RegularExpression Id. */
  int VALOR_INTEIRO = 50;
  /** RegularExpression Id. */
  int VALOR_REAL = 51;
  /** RegularExpression Id. */
  int VALOR_CADEIA = 52;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<COMENTARIO>",
    "<COMENTARIOS>",
    "<COM>",
    "\"liga\"",
    "\";\"",
    "\"abrir\"",
    "\"desliga\"",
    "\"nota\"",
    "\"binario\"",
    "\"sustenido\"",
    "\"maior\"",
    "\"var\"",
    "\"cifra\"",
    "\"ler\"",
    "\"palheta\"",
    "\"dedeira\"",
    "\"cabo\"",
    "\"entrada\"",
    "\"cubo\"",
    "\"para\"",
    "\"pestana\"",
    "\"entre\"",
    "\"seguinte\"",
    "\"capotraste\"",
    "\"corda\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "<BRANCO>",
    "\">\"",
    "\"<\"",
    "\"=\"",
    "\"&&\"",
    "\"||\"",
    "\"!\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\":\"",
    "<NUMERO>",
    "<LETRA>",
    "<ID>",
    "<VALOR_INTEIRO>",
    "<VALOR_REAL>",
    "<VALOR_CADEIA>",
  };

}
